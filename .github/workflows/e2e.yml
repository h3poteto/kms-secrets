name: E2E

on: push


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        env:
          KMS_SECRETS_IMAGE: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          docker build . --file Dockerfile --tag $KMS_SECRETS_IMAGE
          docker push $KMS_SECRETS_IMAGE

  e2e-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.17.0'
      - uses: actions/checkout@v3
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Install ginkgo
        run: |
          go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo@latest
      - name: Testing
        env:
          KMS_SECRETS_IMAGE: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          AWS_REGION: ap-northeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          KMS_KEY_ID: ${{ secrets.KMS_KEY_ID }}
        run: |
          go mod download
          ginkgo -r ./e2e


